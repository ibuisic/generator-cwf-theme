<?php

/**
 * @file
 * <%= themeName %> theme.
 *
 * Place your custom PHP code in this file.
 */

use Drupal\Core\Form\FormStateInterface;
use Drupal\<%= themeName %>\Theme\PreprocessHtml;
use Drupal\<%= themeName %>\Theme\PreprocessLinks;
use Drupal\<%= themeName %>\Theme\PagePreprocess;
use Drupal\<%= themeName %>\Theme\RegionPreprocess;
use Drupal\<%= themeName %>\Theme\BlockRegion;
use Drupal\<%= themeName %>\Theme\ThemeSettings;
use Drupal\<%= themeName %>\Theme\ThemeSuggestionsPageAlter;
use Drupal\<%= themeName %>\Theme\ThemeSuggestionsLinks;
use Drupal\<%= themeName %>\Theme\FormElement;
use Drupal\<%= themeName %>\Theme\SubmitTemplate;

/**
 * {@inheritdoc}
 */
function <%= themeName %>_preprocess(&$variables) {
  // Get all theme settings
  ThemeSettings::hook($variables);
}

/**
 * Implements hook_preprocess_HOOK() for links.
 */
function <%= themeName %>_preprocess_links(&$variables) {
  PreprocessLinks::hook($variables);
}

/**
 * Implements hook_preprocess_HOOK() for page templates.
 */
function <%= themeName %>_preprocess_page(&$variables) {
  PagePreprocess::hook($variables);
}

/**
 * Implements hook_preprocess_HOOK() for region.html.twig.
 */
function <%= themeName %>_preprocess_region(&$variables) {
  RegionPreprocess::hook($variables);
}

// FORMS

/**
 * Implements hook_preprocess_HOOK() for form_element.html.twig.
 */
function <%= themeName %>_preprocess_form_element(&$variables) {
  FormElement::hook($variables);
}

/**
 * Implements hook_form_alter(). for the search block form
 */
function <%= themeName %>_form_search_block_form_alter(&$form, FormStateInterface $form_state, $form_id) {
  $form['keys']['#prefix'] = '<div class="form-inline">';
  $form['actions']['#suffix'] = '</div>';
  $form['keys']['#attributes']['class'][] = 'mr-sm-2';
  $form['actions']['#attributes']['class'][] = 'my-2 my-sm-0';
}


// THEME SUGGESTIONS

/**
 * Implements hook_theme_suggestions_HOOK_alter() for page templates.
 */
function <%= themeName %>_theme_suggestions_page_alter(array &$suggestions, array $variables) {
  ThemeSuggestionsPageAlter::hook($suggestions, $variables);
}

/**
 * Implements hook_theme_suggestions_HOOK_alter() for links.
 */
function <%= themeName %>_theme_suggestions_links_alter(array &$suggestions, array $variables) {
  ThemeSuggestionsLinks::hook($suggestions, $variables);
}


/**
 * Implements hook_theme_suggestions_HOOK_alter() for block templates.
 */
function <%= themeName %>_theme_suggestions_block_alter(array &$suggestions, array $variables) {
  BlockRegion::hook($suggestions, $variables);
}

/**
 * Implements hook_theme_suggestions_HOOK_alter() for form templates.
 */
function <%= themeName %>_theme_suggestions_input_alter(array &$suggestions, array $variables) {
  SubmitTemplate::hook($suggestions, $variables);
}

// // List all libraries
//   function <%= themeName %>_library_info_alter(&$libraries, $extension) {
//     dump($libraries);
//   }
